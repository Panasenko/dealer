################################################################################
# Node-RED Stack or Compose
################################################################################
# docker stack deploy node-red --compose-file docker-compose-node-red.yml
# docker-compose -f docker-compose-node-red.yml -p myNoderedProject up
################################################################################
version: "3"

services:
  nodered:
   image: nodered/node-red-docker:latest
   container_name: nodered
   environment:
   - TZ=Europe/Kiev
   ports:
   - "1880:1880"
   volumes:
   - ./nodered/data:/data
   restart: always
   depends_on:
   - redis
   - postgres

  chart:
   build: chart_api/.
   container_name: chart
   ports:
   - "3000:3000"
   volumes:
   - ./chart_api:/usr/src/app
   - ./data/charts:/usr/src/app/image
  

  redis:
   image: redis
   command: ["redis-server", "--appendonly", "yes"]
   container_name: redis
   ports:
   - "6379:6379"
   volumes:
   - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
   - ./db/redis/data:/data     
   command:
   - /usr/local/etc/redis/redis.conf
   restart: always

  postgres:
   image: postgres
   container_name: postgres
   ports:
   - "5432:5432"
   environment:
   - POSTGRES_PASSWORD=548987
   - TZ="Europe/Kiev"
   - PGTZ='GMT+3'
   volumes:
   - ./db/postgresql/data:/var/lib/postgresql/data
   restart: always

  nginx:
   image: nginx:latest
   hostname: nginx
   container_name: nginx
   ports:
   - 80:80
   - 443:443  
   depends_on:
   - nodered
   - chart  
   volumes:
   - ./nginx/nginx.conf:/etc/nginx/nginx.conf
   - ./data:/www/data  

  redis-commander:
   container_name: redis-commander
   hostname: redis-commander
   image: rediscommander/redis-commander:latest
   restart: always
   depends_on:
   - redis
   environment:
   - REDIS_HOSTS=local:redis:6379
   ports:
   - "8081:8081"
